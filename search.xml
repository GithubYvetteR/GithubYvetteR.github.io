<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法分析与设计</title>
      <link href="/2020/09/22/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
      <url>/2020/09/22/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="算法的定义"><a href="#算法的定义" class="headerlink" title="算法的定义"></a>算法的定义</h3><p>给定计算问题，算法是一系列良定义（没有歧义）的计算步骤，逐一执行计算步骤即可得预期的输出。</p><h3 id="算法的性质：有穷性、确定性、可行性"><a href="#算法的性质：有穷性、确定性、可行性" class="headerlink" title="算法的性质：有穷性、确定性、可行性"></a>算法的性质：有穷性、确定性、可行性</h3><ul><li>有穷性：算法必须在有限个计算步骤后终止。</li><li>确定性：算法必须是没有歧义的。</li><li>可行性：可以机械地一步一步执行基本操作步骤。</li></ul><h3 id="算法的表示"><a href="#算法的表示" class="headerlink" title="算法的表示"></a>算法的表示</h3><p>自然语言、机器语言、伪代码（推荐）。</p><p>例如，插入排序的伪代码可以表示如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for j&lt;-2 to n do</span><br><span class="line">key&lt;-A[j]</span><br><span class="line">while i&gt;0 and A[i]&gt;key do</span><br><span class="line">A[i+1]&lt;-A[i]</span><br><span class="line">i&lt;-i-1</span><br><span class="line">end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>选择排序的伪代码可以表示如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">for i&lt;-1 to n-1 do</span><br><span class="line">cur_min&lt;-A[i]</span><br><span class="line">cur_min_pos&lt;-i</span><br><span class="line">for j&lt;-i+1 to n do</span><br><span class="line">if A[j]&lt;cur_min_pos then</span><br><span class="line">cur_min&lt;-A[j]</span><br><span class="line">cur_min_pos&lt;-j</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line">交换 A[i] 和 A[cur_min_pos]</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h3 id="算法的分析"><a href="#算法的分析" class="headerlink" title="算法的分析"></a>算法的分析</h3><h4 id="算法分析的原则"><a href="#算法分析的原则" class="headerlink" title="算法分析的原则"></a>算法分析的原则</h4><ul><li>统一机器性能</li><li>分析最坏情况</li></ul><p>这样，算法运行时间仅依赖于问题输入规模 $n$ ，表示为 $T(n)$ 。</p><h4 id="算法分析的工具——时间复杂度"><a href="#算法分析的工具——时间复杂度" class="headerlink" title="算法分析的工具——时间复杂度"></a>算法分析的工具——时间复杂度</h4><p>计算每行伪代码操作次数并求和。例如，插入排序的 $T(n)= \frac{3}{2}n^2+\frac{7}{2}n-4$ ，选择排序的 $T(n)=2n^2+3n-4$ 。</p><p><strong>渐近分析</strong>：分析 $n$ 充分大时函数的大小关系（忽略 $T(n)$ 的系数与低阶项，仅关注高阶项），并用渐近记号表示。</p><ul><li><p>渐近紧确界：用记号 $\theta$ 表示。对于给定的函数 $g(n)$ ，$\theta(g(n))$ 表示以下函数的集合：$\theta(g(n))={ T(n):\exists c_1,c_2,n_0&gt;0,使得\forall n\geq n_0,c_1g(n)\leq T(n)\leq c_2g(n)}$。$T(n)$ 的上界 $c_1g(n)$ 即是 $O$ ，下界即是 $\Omega$ 。</p></li><li><p>渐近上界：用记号 $O$ 表示。对于给定的函数 $g(n)$ ，$O(g(n))$ 表示以下函数的集合：$O(g(n))={T(n):\exists c,n_0&gt;0,使得\forall n\geq n_0,0\leq T(n)\leq cg(n)}$ 。</p></li><li><p>渐近下界：用记号 $\Omega$ 表示。对于给定的函数 $g(n)$ ，$\Omega(g(n))$ 表示以下函数的集合：$\Omega(g(n))={T(n):\exists c,n_0&gt;0,使得\forall n\geq n_0, 0\leq cg(n)\leq T(n)}$ 。</p></li></ul><p>$T(n)=\theta(g(n))$ 等价于：$T(n)=\Omega(g(n))$ 且 $T(n)=\Omega(g(n))$ 。</p><p>算法运行时间称为<strong>算法时间复杂度</strong>，通常使用渐近记号 $O$ 表示。例如，插入排序的时间复杂度为 $O(n^2)$ ，选择排序的时间复杂度同样为 $O(n^2)$ 。</p>]]></content>
      
      
      <categories>
          
          <category> 学习小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA WEB项目初试</title>
      <link href="/2020/09/19/WEB%E9%A1%B9%E7%9B%AE%E5%88%9D%E8%AF%95/"/>
      <url>/2020/09/19/WEB%E9%A1%B9%E7%9B%AE%E5%88%9D%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Tomcat的下载和配置"><a href="#Tomcat的下载和配置" class="headerlink" title="Tomcat的下载和配置"></a>Tomcat的下载和配置</h2><p>一种web服务器。[ 下载地址 ]: <a href="http://tomcat.apache.org/%E3%80%82%E4%B8%8B%E8%BD%BD%E7%89%88%E6%9C%ACTomcat9">http://tomcat.apache.org/。下载版本Tomcat9</a> 64-bit Windows zip。下载完成后解压在D盘。</p><p>检查环境变量JAVA HOME是否设置。</p><p>启动服务：进入bin目录，点击startup.bat。第一次打开会显示日志中文乱码，需要修改配置文件conf/logging.properties，找到<code>java.util.logging.ConsoleHandler.encoding = UTF-8</code>并注释掉即可。</p><p><img src="1.png"></p><p>Tomcat成功启动，不要关闭bat，在浏览器中验证服务，输入<code>http://localhost:8080</code>（默认端口是8080），看到如下画面，表明Tomcat已经打开了：</p><p><img src="2.png"></p><h2 id="创建Web项目"><a href="#创建Web项目" class="headerlink" title="创建Web项目"></a>创建Web项目</h2><h3 id="1-手动形式"><a href="#1-手动形式" class="headerlink" title="1. 手动形式"></a>1. 手动形式</h3><p>打开tomcat目录的webapp目录。新建一个项目文件夹<code>myweb</code>。在项目文件夹下放入资源，在浏览器中访问资源路径即可查看资源。</p><p>例如，将tomcat.png放入myweb文件夹中，重启tomcat，接着在浏览器中访问<code>http://localhost:8080/myweb/tomcat.png</code>。效果如下：</p><p><img src="3.png"></p><p><img src="4.png"></p><p>如果要通过外网访问，需要web服务器。这里先不做说明。</p><p>接下来，可以在myweb里面写一些html网页。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span> my first web pro<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">&quot;tomcat.png&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重启tomcat，浏览器访问<code>localhost:8080/myweb/index.html</code>或者<code>localhost:8080/myweb</code>（默认访问index.html）：</p><p><img src="5.png"></p><h3 id="2-自动构建（使用IDEA）"><a href="#2-自动构建（使用IDEA）" class="headerlink" title="2. 自动构建（使用IDEA）"></a>2. 自动构建（使用IDEA）</h3><p>用Maven新建一个项目，操作如下：</p><p><img src="6.png"></p><p><img src="7.png"></p><p>点击Finish，完成创建。</p><p>观察项目结构：</p><p><img src="8.png"></p><p>在<code>pom.xml</code>中可以修改项目配置。</p><h4 id="HTML网页"><a href="#HTML网页" class="headerlink" title="HTML网页"></a>HTML网页</h4><p>在src/webapp下新建index.html如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, World,这是一个Maven构建的web项目<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接着在右上角的绿色小锤子旁边配置web项目服务器。</p><p><img src="9.png"></p><p>点击左上角的加号，选择Tomcat Server-&gt;Local，进行下面的配置：</p><p><img src="10.png"></p><p>发现下面出现了warning，点击查看，发现是没有选择项目发布的artifacts，这里选择exploded。</p><p><img src="11.png"></p><p>修改发布路径。</p><p><img src="12.png"></p><p>完成配置，发现下面出现了Tomcat服务，可以点击右上角绿色的播放键运行服务器了。</p><p><img src="13.png"></p><p>弹出之前写的html界面。</p><p><img src="14.png"></p><p>Tomcat会默认访问index页面。</p><h4 id="JSP网页"><a href="#JSP网页" class="headerlink" title="JSP网页"></a>JSP网页</h4><p>接下来我们创建一个JSP页面。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: liuli</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">9</span>/<span class="number">19</span></span><br><span class="line">  Time: <span class="number">15</span>:<span class="number">41</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>更改过资源后，需要重新发布项目。点击服务中的update图标，选择redeploy重新发布项目。</p><p><img src="15.png"></p><p>重新发布后，访问<code>http://localhost:8080/my_maven_web_pro/Hello.jsp</code>，就可以看到新的页面了。</p><p><img src="16.png"></p><h4 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h4><p>在main目录底下创建名为java的文件夹，并标记成为source root文件夹（右键-&gt;mark directory as-&gt;source root），用于编写java源码。</p><p>在java文件夹中新建package，我这里叫<code>com.nervar.servlet</code>，在包中新建class <code>HelloServlet</code>如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nevar.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        resp.getWriter().write(<span class="string">&quot;Hello,World.这是一个servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以在maven中下载需要的包HttpServlet。</p><p>在src/webapp/WEB-INF/web.xml中添加servlet配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.nevar.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/helloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，servlet-name指当前servlet的名称，servlet-class标签内配置的是链接的servlet类，servlet-mapping中url-pattern指定访问servlet的url。</p><p>重新发布项目，访问<code>http://localhost:8080/my_maven_web_pro/helloServlet</code>，可以看到刚刚编写的servlet：</p><p><img src="17.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 学习小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一天学C++（一）</title>
      <link href="/2020/09/15/%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6C/"/>
      <url>/2020/09/15/%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>参考书：电子工业出版社《C++程序设计》</p><p>程序运行环境：VSCode</p><p>&lt;&lt;：流插入运算符</p><h2 id="数据类型和表达式"><a href="#数据类型和表达式" class="headerlink" title="数据类型和表达式"></a>数据类型和表达式</h2><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>组成规则：必须由字母、数字、下划线组成，且第一个字符必须为字母或下划线，它不能与C++语言关键字相同，汉字与字母同等待遇。</p><p>C++语言区分大小写。</p><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><h4 id="基本数据类型-1"><a href="#基本数据类型-1" class="headerlink" title="基本数据类型"></a>基本数据类型</h4><table><thead><tr><th>类型</th><th>位</th><th>范围</th></tr></thead><tbody><tr><td><strong>char</strong></td><td><strong>1 个字节</strong></td><td><strong>-128 到 127 或者 0 到 255</strong></td></tr><tr><td>unsigned char</td><td>1 个字节</td><td>0 到 255</td></tr><tr><td>signed char</td><td>1 个字节</td><td>-128 到 127</td></tr><tr><td><strong>int</strong></td><td><strong>4 个字节</strong></td><td><strong>-2147483648 到 2147483647</strong></td></tr><tr><td>unsigned int</td><td>4 个字节</td><td>0 到 4294967295</td></tr><tr><td>signed int</td><td>4 个字节</td><td>-2147483648 到 2147483647</td></tr><tr><td>short int</td><td>2 个字节</td><td>-32768 到 32767</td></tr><tr><td>unsigned short int</td><td>2 个字节</td><td>0 到 65,535</td></tr><tr><td>signed short int</td><td>2 个字节</td><td>-32768 到 32767</td></tr><tr><td>long int</td><td>8 个字节</td><td>-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td></tr><tr><td>signed long int</td><td>8 个字节</td><td>-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td></tr><tr><td>unsigned long int</td><td>8 个字节</td><td>0 到 18,446,744,073,709,551,615</td></tr><tr><td><strong>float</strong></td><td><strong>4 个字节</strong></td><td><strong>精度型占4个字节（32位）内存空间，+/- 3.4e +/- 38 (~7 个数字)</strong></td></tr><tr><td><strong>double</strong></td><td><strong>8 个字节</strong></td><td><strong>双精度型占8 个字节（64位）内存空间，+/- 1.7e +/- 308 (~15 个数字)</strong></td></tr><tr><td>long double</td><td>16 个字节</td><td>长双精度型 16 个字节（128位）内存空间，可提供18-19位有效数字。</td></tr><tr><td>wchar_t</td><td>2 或 4 个字节</td><td>1 个宽字符</td></tr></tbody></table><p><strong>bool</strong>：只有false和true两个值。在C++中可以用数值类型给布尔类型赋值，0代表false，非0数值代表true。</p><h4 id="用户自定义类型"><a href="#用户自定义类型" class="headerlink" title="用户自定义类型"></a>用户自定义类型</h4><p>包括数组、空类型、指针、结构体类型、联合体类型、枚举类型和类。</p><h3 id="常量和变量"><a href="#常量和变量" class="headerlink" title="常量和变量"></a>常量和变量</h3><p>常量是在程序运行中其值不能改变的量。在C++语言中，常量可分为6类：整型常量、实型常量、字符型常量、字符串型常量、符号常量、逻辑型常量。</p><p><strong>符号常量</strong>：符号常量是用一个符号常量名代表一个常量，符号常量名的起法与标识符的起法相同，它的定义形式有两种：</p><p>（1）const格式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> 数据类型说明符 符号常量名=常量值</span><br><span class="line">    或</span><br><span class="line">数据类型说明符 <span class="keyword">const</span> 常量名=常量值</span><br><span class="line">    </span><br><span class="line">例如：</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> pi=<span class="number">3.1415926f</span>;</span><br></pre></td></tr></table></figure><p>（2）define格式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> 符号常量名 字符串</span></span><br></pre></td></tr></table></figure><p>需要说明的是由于#define 格式不属于C++语句，它是编译预处理命令，所以这种格式的尾部不可以写分号。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量就是在程序运行中可以改变的量。C++语言规定变量必须先定义后使用，变量名的命名与标识符相同。变量包括整型变量（基本整型int，短整型short int，长整型long int，无符号整型unsigned）、实型变量（单精度实型变量float，双精度实型变量double，长双精度实型变量long double）、字符型变量char、逻辑型变量bool。</p><h3 id="运算符和表达式"><a href="#运算符和表达式" class="headerlink" title="运算符和表达式"></a>运算符和表达式</h3><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><p>算数运算符：+ - * /</p><p>关系运算符：&gt; &gt;= &lt; &lt;= == !=</p><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><p>! &amp;&amp; ||</p><h4 id="位操作运算符"><a href="#位操作运算符" class="headerlink" title="位操作运算符"></a>位操作运算符</h4><p>取反~，右移&gt;&gt;，左移&lt;&lt;，按位与&amp;，按位异或^，按位或|</p><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>=</p><h3 id="基本输入-输出"><a href="#基本输入-输出" class="headerlink" title="基本输入/输出"></a>基本输入/输出</h3><p>在C++语言中，流是从数据的传输（流动）抽象而来的，它是字节的序列。I/O流就是输入或输出的一系列字节。向流中添加数据的操作成为插入操作（&lt;&lt;），从流中获取数据的操作成为提取操作（&gt;&gt;）。</p><p>C++语言中的cin与cout是两个预先定义的流对象，分别代表标准的输入设备（键盘）与标准的输出设备（显示器）。cin与&gt;&gt;配合使用，cout与&lt;&lt;配合使用，使用cin和cout对象，需要引入相应的头文件iostream.h。</p><h4 id="标准输出语句"><a href="#标准输出语句" class="headerlink" title="标准输出语句"></a>标准输出语句</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span>&lt;&lt;数据<span class="number">1</span>&lt;&lt;数据<span class="number">2</span>&lt;&lt;……&lt;&lt;数据n;</span><br></pre></td></tr></table></figure><p>cout的作用是向标准输出设备上输出数据，被输出的数据可以是常量、已有值的变量或是一个表达式。</p><p>一个cout语句也可以拆成若干行书写，但注意语句结束符“;”只能写在最后一行上。</p><p>在cout中，实现数据换行功能的方法是：既可以使用转义字符“\n”，也可以使用表示行结束的流操作符endl。</p><p>在cout中还可以使用流控制符控制数据的输出格式，但要注意，在使用这些流控制符时，要在程序的开头用#include语句嵌入头文件”iomanip.h”，因为这些控制符是在该文件中定义的。setiosflags操作符若加上前缀re就是废除上一个setiosflags的设置。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//流控制符示例</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> a=<span class="number">14</span>,a1,a2,a3;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;dec&gt;&gt;a1;<span class="comment">//十进制</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;hex&gt;&gt;a2;<span class="comment">//十六进制</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;oct&gt;&gt;a3;<span class="comment">//八进制</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;dec:&quot;</span>&lt;&lt;dec&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;hex:&quot;</span>&lt;&lt;hex&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;oct:&quot;</span>&lt;&lt;oct&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;dec:&quot;</span>&lt;&lt;dec&lt;&lt;a1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;hex:&quot;</span>&lt;&lt;hex&lt;&lt;a2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;oct:&quot;</span>&lt;&lt;oct&lt;&lt;a3&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">a</span><br><span class="line">12</span><br><span class="line">dec:14</span><br><span class="line">hex:e</span><br><span class="line">oct:16</span><br><span class="line">dec:10</span><br><span class="line">hex:a</span><br><span class="line">oct:12</span><br></pre></td></tr></table></figure><h4 id="标准输入语句"><a href="#标准输入语句" class="headerlink" title="标准输入语句"></a>标准输入语句</h4><p>在C++程序中，数据的输入通常采用输入流对象cin来完成，其格式如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span>&gt;&gt;变量名<span class="number">1</span>&gt;&gt;变量名<span class="number">2</span>&gt;&gt;...&gt;&gt;变量名n;</span><br></pre></td></tr></table></figure><p>cin的功能是：当程序在执行过程中执行到cin时，程序会暂停执行并等待用户从键盘输入相应数目的数据，用户输入完数据并按回车键后，cin从输入流中取得相应的数据并传送给其后的变量。</p><p>”//“操作符后出了变量名外不得有其他数字、字符串或字符，否则系统会报错。</p><p>cin后面所跟的变量可为任何数据类型。</p><p>当一个cin后面同时跟有多个变量时，则用户输入数据的个数应与变量的个数相同，各数据之间用一个或多个空格隔开，输入完毕后按回车键，或者每输入一个数据按回车键也可。</p><h2 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h2><ol><li><p>编程实现：由键盘输入两个整数，然后输出最大者。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">if</span>(a &gt; b)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Java中调用MySQL数据库</title>
      <link href="/2020/09/09/%E5%A6%82%E4%BD%95%E5%9C%A8Java%E4%B8%AD%E8%B0%83%E7%94%A8MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2020/09/09/%E5%A6%82%E4%BD%95%E5%9C%A8Java%E4%B8%AD%E8%B0%83%E7%94%A8MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大四老狗又想起来自己已经很久没学习了【快去学习！！！】。</p><h2 id="Windows下安装MySQL"><a href="#Windows下安装MySQL" class="headerlink" title="Windows下安装MySQL"></a>Windows下安装MySQL</h2><p>之前都是在linux环境下使用mysql(mariadb)或者sqlite，现在由于是在windows环境上实验，于是要先安装win版本的mysql。</p><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><p>双击运行mysql-5.5.37-win32.msi。</p><p>选择安装类型“Custom”。</p><p><img src="1.png"></p><p>在“Developer Components（开发者部分）”上左键单击，选择“This feature,</p><p>and all subfeatures, will be installed on local hard drive.”，即“此部分，及下属子部分内容，全部安装在本地硬盘上”。在上面的“MySQL Server（mysql服务器）”、“Client Programs（mysql客户端程序）”、“Documentation（文档）”也如此操作，以保证安装所有文件。点选“Change…”，手动指定安装目录。</p><p><img src="2.png"></p><p>安装完成后出现成功界面。</p><p><img src="3.png"></p><p>点击Finish，之后弹出MySQL配置向导。</p><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><p><img src="4.png"></p><p>选择配置方式。</p><p><img src="5.png"></p><p>选择服务器类型。</p><p><img src="6.png"></p><p>选择MySQL数据库的大致用途。</p><p><img src="7.png"></p><p>选择数据库位置。</p><p><img src="8.png"></p><p>选择网站并发连接数。</p><p><img src="9.png"></p><p>选择是否启用TCP/IP连接。</p><p><img src="10.png"></p><p>设置数据库语言编码。</p><p><img src="11.png"></p><p>设置windows服务和环境变量。</p><p><img src="12.png"></p><p>设置用户名和密码。</p><p><img src="13.png"></p><p>完成！</p><p><img src="14.png"></p><p>查看服务，发现MySQL服务已启用。</p><p><img src="15.png"></p><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h3><p>打开命令行，输入<code>mysql.exe -u root -p</code>，之后输入密码，成功进入mysql。</p><p><img src="16.png"></p><p>为了之后的连接查询，我们先新建一个数据表stu，再插入一些数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use test;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; CREATE TABLE stu(</span><br><span class="line">    -&gt; sid int PRIMARY KEY,</span><br><span class="line">    -&gt; sname varchar(20),</span><br><span class="line">    -&gt; sage int,</span><br><span class="line">    -&gt; major varchar(50)</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+----------------+</span><br><span class="line">| Tables_in_test |</span><br><span class="line">+----------------+</span><br><span class="line">| stu            |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT INTO stu VALUES(1001,&#39;zhangsan&#39;,20,&#39;java&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT INTO stu VALUES(1002,&#39;lisi&#39;,20,&#39;c++&#39;);</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT INTO stu VALUES(1003,&#39;wangwu&#39;,20,&#39;java&#39;);</span><br><span class="line">Query OK, 1 row affected (0.07 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT INTO stu VALUES(1004,&#39;zhaoliu&#39;,20,&#39;python&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM stu;</span><br><span class="line">+------+----------+------+--------+</span><br><span class="line">| sid  | sname    | sage | major  |</span><br><span class="line">+------+----------+------+--------+</span><br><span class="line">| 1001 | zhangsan |   20 | java   |</span><br><span class="line">| 1002 | lisi     |   20 | c++    |</span><br><span class="line">| 1003 | wangwu   |   20 | java   |</span><br><span class="line">| 1004 | zhaoliu  |   20 | python |</span><br><span class="line">+------+----------+------+--------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>到此，MySQL的配置完成。</p><h2 id="在IDEA中使用Java连接MySQL"><a href="#在IDEA中使用Java连接MySQL" class="headerlink" title="在IDEA中使用Java连接MySQL"></a>在IDEA中使用Java连接MySQL</h2><h3 id="1-导入jar包"><a href="#1-导入jar包" class="headerlink" title="1. 导入jar包"></a>1. 导入jar包</h3><p>要连接mysql，需要加载mysql-cconnector-java包。在IDEA中，jar包的导入方法是File-&gt;Project Structure-&gt;Modules-&gt;Dependencies，点击右侧加号进行导入。</p><p><img src="17.png"></p><p>然后就可以在项目列表里的libraries中看到导入后的jar包了。</p><p><img src="18.png"></p><h3 id="2-调用类、访问mysql"><a href="#2-调用类、访问mysql" class="headerlink" title="2. 调用类、访问mysql"></a>2. 调用类、访问mysql</h3><p>具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">mysql_connect</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">            Connection conn = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>);<span class="comment">//用户名和密码</span></span><br><span class="line">            System.out.println(conn);</span><br><span class="line"></span><br><span class="line">            PreparedStatement ps = conn.prepareStatement(<span class="string">&quot;select * from stu&quot;</span>);</span><br><span class="line">            ResultSet rs = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line">                System.out.println(rs.getInt(<span class="string">&quot;sid&quot;</span>)+<span class="string">&quot;  &quot;</span>+rs.getString(<span class="string">&quot;sname&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>右键运行，结果如下：</p><p><img src="" alt="19.png"></p><p>和<code>SELECT * FROM stu;</code>的结果一致，连接成功！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 学习小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA与Maven的配置使用</title>
      <link href="/2020/09/06/idea%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8EMaven%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/09/06/idea%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8EMaven%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大四老狗今年要上两门项目实践课，其中一门要用到Java，之前都是头铁用VSCode或者Eclipse编译Java环境的，这次要求用IDEA，于是记录一下学习过程（好耶！<del>禁止好耶</del>）</p><h2 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h2><h3 id="1-IDEA简介"><a href="#1-IDEA简介" class="headerlink" title="1. IDEA简介"></a>1. IDEA简介</h3><p>IDEA，全称 IntelliJ IDEA，是 Java 语言的集成开发环境，IDEA 在业界被公认为是最好的 java 开发工具之一，尤其 在智能代码助手、代码自动提示、重构、J2EE 支持、JUnit、CVS 整合、创新的 GUI 设计等方面的功能是非常牛逼 的。IDEA 几乎支持与 Java 开发有关的所有操作。 </p><h3 id="2-IDEA下载"><a href="#2-IDEA下载" class="headerlink" title="2. IDEA下载"></a>2. IDEA下载</h3><p>IDEA分旗舰版（30天试用）和社区版（免费）。我这里下载的是旗舰版+破解。破解方式在下面会说明。</p><p>安装之前，建议电脑配置：内存最少4G以上，CPU i5以上，JDK1.8以上。</p><p><img src="1.png"></p><p>安装时勾选上图所示，其他的按默认配置就好。</p><h3 id="3-启动IDEA"><a href="#3-启动IDEA" class="headerlink" title="3. 启动IDEA"></a>3. 启动IDEA</h3><p>双击桌面上的idea图标即可启动。</p><p><img src="2.png"></p><p>启动时，询问是否需要导入一些配置，可以选择不导入。</p><p><img src="3.png"></p><p><img src="4.png"></p><p><img src="5.png"></p><p><img src="6.png"></p><h3 id="4-激活IDEA"><a href="#4-激活IDEA" class="headerlink" title="4. 激活IDEA"></a>4. 激活IDEA</h3><p>目前能破解的IDEA版本是2020.1（最新版我试了会卡住），破解方式参照了这篇文章<a href="https://www.jianshu.com/p/6b705a286be7">点击此处</a>。</p><h3 id="5-第一个程序Hello-World"><a href="#5-第一个程序Hello-World" class="headerlink" title="5. 第一个程序Hello World"></a>5. 第一个程序Hello World</h3><p>现在，就可以使用IDEA编写Java程序了！那么，第一个程序当然得是<del>The World</del> Hello World了！</p><p>创建Java项目。</p><p><img src="7.png"></p><p>选择SDK。</p><p><img src="8.png"></p><p>之后直接默认配置就好。</p><p>新建完项目后，选择src文件夹，右键new，选择Java class创建class。</p><p><img src="9.png"></p><p>接着就可以编写测试程序了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">hello</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在程序空白处右键菜单，选择run运行。</p><p><img src="10.png"></p><p>运行成功！</p><p><img src="11.png"></p><p>值得注意的是，使用IDEA写完代码，不用手动保存，IDEA会自动完成保存代码。</p><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><h3 id="1-你说的这个Maven，它到底是个什么？"><a href="#1-你说的这个Maven，它到底是个什么？" class="headerlink" title="1. 你说的这个Maven，它到底是个什么？"></a>1. 你说的这个Maven，它到底是个什么？</h3><p>Maven是一款服务于Java平台的自动化<strong>构建</strong>工具，它可以规范jar包的下载，并将jar包保存在‘仓库’中进行管理，项目需要该jar包的时候从仓库中引用即可，可以节省存储空间。另外，maven还可以自己处理jar包之间的依赖关系，只需要引入一个主jar包，依赖包会由maven自己引入。</p><p>所谓<strong>构建</strong>，是以java源文件、配置文件、jsp、html、图片等资源作为原材料去生产一个可以运行的项目的过程。构建的环节如下：</p><ul><li>清理：将以前编译得到的旧的.class文件删除，为下一次的编译做准备</li><li>编译：将.java文件编译成.class文件</li><li>测试：自动测试，自动调用junit程序</li><li>报告：测试程序执行的结果</li><li>打包：java项目打jar包，web项目打war包</li><li>安装：Maven特定的概念—将打包得到的文件复制到“仓库”的指定位置</li><li>部署：web项目生成war包复制到Servlet容器的指定目录下，例如tomcat的webapps目录，使其可以运行</li></ul><h3 id="2-好像有点懂了，那怎么才能搞到呢"><a href="#2-好像有点懂了，那怎么才能搞到呢" class="headerlink" title="2. 好像有点懂了，那怎么才能搞到呢"></a>2. 好像有点懂了，那怎么才能搞到呢</h3><h4 id="下载和解压"><a href="#下载和解压" class="headerlink" title="下载和解压"></a>下载和解压</h4><p>Maven-3.6.3的<a href="http://mirror.bit.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip">下载地址</a>。需要找一个非中文的非C盘目录解压。我这里解压在D盘。</p><h4 id="下载Maven仓库"><a href="#下载Maven仓库" class="headerlink" title="下载Maven仓库"></a>下载Maven仓库</h4><p>下载Maven仓库（里面有一些常用jar包），解压到非C盘非中文目录。我这里解压到D:\apache-maven-3.6.3\repository下。复制解压目录，下一步会用到。</p><p>修改Maven目录下的配置文件apache-maven-3.6.3\conf\settings.xml，将Maven默认的仓库目录改为我们刚刚复制的解压目录。</p><p><img src="12.png"></p><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>1）检查JAVA_HOME环境变量</p><p>很久之前做的，这里就不赘述了（其实是不记得了）。</p><p>2）配置Maven环境变量。这个到系统环境变量配置里去添加一下：</p><p><img src="13.png"></p><p><img src="14.png"></p><p>3）查看Maven版本</p><p><img src="15.png"></p><h4 id="更改默认下载路径"><a href="#更改默认下载路径" class="headerlink" title="更改默认下载路径"></a>更改默认下载路径</h4><p>默认在中央仓库下载，比较慢，更改一下默认的下载路径（还是在apache-maven-3.6.3\conf\settings.xml中），配置阿里云下载。</p><p><img src="16.png"></p><p>到这里，Maven的配置就完成了。</p><h3 id="3-配置了这么多，那么应该怎么用呢"><a href="#3-配置了这么多，那么应该怎么用呢" class="headerlink" title="3. 配置了这么多，那么应该怎么用呢"></a>3. 配置了这么多，那么应该怎么用呢</h3><h4 id="IDEA使用Maven构建项目"><a href="#IDEA使用Maven构建项目" class="headerlink" title="IDEA使用Maven构建项目"></a>IDEA使用Maven构建项目</h4><p>首先，打开IDEA，如下图所示构建一个Java项目。</p><p><img src="17.png"></p><p>点击Next，给项目起一个名字（我就随便起了）。</p><p><img src="18.png"></p><p>最后选择Maven的目录。</p><p><img src="19.png"></p><p>然后就可以在里面编写自己的项目了！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 学习小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一天做PAT（持续更新中）</title>
      <link href="/2020/09/04/%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%81%9APAT/"/>
      <url>/2020/09/04/%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%81%9APAT/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>====================小菜鸡第一天做PAT====================</p><h2 id="1001-卡拉兹猜想"><a href="#1001-卡拉兹猜想" class="headerlink" title="1001 卡拉兹猜想"></a>1001 卡拉兹猜想</h2><blockquote><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 <em>n</em>，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3<em>n</em>+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 <em>n</em>=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3<em>n</em>+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 <em>n</em>，简单地数一下，需要多少步（砍几下）才能得到 <em>n</em>=1？</p></blockquote><p>这个还挺基础的，随便写写。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">callatz</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> step = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            n = n/<span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            n = (<span class="number">3</span>*n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        step++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> step;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, step;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    step = callatz(n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,step);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1002-写出这个数"><a href="#1002-写出这个数" class="headerlink" title="1002 写出这个数"></a>1002 写出这个数</h2><blockquote><p>读入一个正整数 <em>n</em>，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p><p>输入格式：</p><p>每个测试输入包含 1 个测试用例，即给出自然数 <em>n</em> 的值。这里保证 <em>n</em> 小于 $10^{100}$。</p><p>输出格式：</p><p>在一行内输出 <em>n</em> 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p><p>输入样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1234567890987654321123456789</span><br></pre></td></tr></table></figure><p>输出样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yi san wu</span><br></pre></td></tr></table></figure></blockquote><p>从这道题开始，需要动脑子了。一开始我将n作为整数读取，然而，后面发现这个输入样例真的很长，$10^{100}$用整数处理也太难了。查阅了大佬们的代码，决定用字符串的格式读入。但是最后还是没有通过全部的测试，我也不知道为什么（笑）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,m=<span class="number">0</span>,t;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">1024</span>],output[<span class="number">1024</span>]=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(str);i++)&#123;</span><br><span class="line">        sum += str[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t = sum;</span><br><span class="line">    <span class="keyword">while</span>(sum / <span class="number">10</span> != <span class="number">0</span>)&#123;</span><br><span class="line">        m++;</span><br><span class="line">        sum = sum / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sum = t;</span><br><span class="line">    <span class="keyword">while</span>(sum /<span class="number">10</span> != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> i = sum / (<span class="keyword">int</span>)<span class="built_in">pow</span>(<span class="number">10</span>,m);</span><br><span class="line">        <span class="keyword">switch</span>(i)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;ling &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;yi &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;er &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;san &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;si &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;wu &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;liu &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;qi &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;ba &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                <span class="built_in">strcat</span>(output,<span class="string">&quot;jiu &quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sum = sum % (<span class="keyword">int</span>)<span class="built_in">pow</span>(<span class="number">10</span>,m);</span><br><span class="line">        m--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(sum)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;ling&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;yi&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;er&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;san&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;si&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;wu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;liu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;qi&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;ba&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="built_in">strcat</span>(output,<span class="string">&quot;jiu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,output);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1003-我要通过！"><a href="#1003-我要通过！" class="headerlink" title="1003 我要通过！"></a>1003 我要通过！</h2><blockquote><p>“<strong>答案正确</strong>”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“<strong>答案正确</strong>”大派送 —— 只要读入的字符串满足下列条件，系统就输出“<strong>答案正确</strong>”，否则输出“<strong>答案错误</strong>”。</p><p>得到“<strong>答案正确</strong>”的条件是：</p><ol><li>字符串中必须仅有 <code>P</code>、 <code>A</code>、 <code>T</code>这三种字符，不可以包含其它字符；</li><li>任意形如 <code>xPATx</code> 的字符串都可以获得“<strong>答案正确</strong>”，其中 <code>x</code> 或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串；</li><li>如果 <code>aPbTc</code> 是正确的，那么 <code>aPbATca</code> 也是正确的，其中 <code>a</code>、 <code>b</code>、 <code>c</code> 均或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串。</li></ol><p>现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“<strong>答案正确</strong>”的。</p><p>输入格式：</p><p>每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 <em>n</em> (&lt;10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。</p><p>输出格式：</p><p>每个字符串的检测结果占一行，如果该字符串可以获得“<strong>答案正确</strong>”，则输出 <code>YES</code>，否则输出 <code>NO</code>。</p><p>输入样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">PAT</span><br><span class="line">PAAT</span><br><span class="line">AAPATAA</span><br><span class="line">AAPAATAAAA</span><br><span class="line">xPATx</span><br><span class="line">PT</span><br><span class="line">Whatever</span><br><span class="line">APAAATAA</span><br></pre></td></tr></table></figure><p>输出样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br></pre></td></tr></table></figure></blockquote><p>这道题的条件非常绕，尤其是第三条，乍一看看不出是什么规则。不过我在想这道题能不能用正则去做，虽然我还不太懂正则（悲）。</p><p>首先第一个条件可以直接遍历字符串判断，这个没什么问题。</p><p>第二个条件可以先从<code>xPATx</code>的形式判断起，先跳过首位的空字符和<code>A</code>，再匹配PAT，再判断末尾是否是空字符或者<code>A</code>。</p><p>第三个条件，可以尝试归纳法。以下是参照知乎上大佬的分析方法</p><p><img src="/images/2020-9-4-1.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> input[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">char</span> *p;</span><br><span class="line">    <span class="keyword">int</span> lena,lenb,lenend;</span><br><span class="line">    lena = <span class="number">0</span>;lenb = <span class="number">0</span>;lenend = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,input);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(input);i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(input[i] != <span class="string">&#x27;P&#x27;</span> &amp;&amp; input[i] != <span class="string">&#x27;A&#x27;</span> &amp;&amp; input[i] != <span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    p = input;</span><br><span class="line">    <span class="keyword">while</span>(*p == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">        p++;</span><br><span class="line">        lena++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(*p != <span class="string">&#x27;P&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        p++;</span><br><span class="line">        <span class="keyword">if</span>(*p != <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(*p == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">                p++;</span><br><span class="line">                lenb++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(*p != <span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    p++;</span><br><span class="line">    <span class="keyword">while</span>(*p == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">        p++;</span><br><span class="line">        lenend++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(*p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(&quot;lena=%d,lenb=%d,lenend=%d\n&quot;,lena,lenb,lenend);</span></span><br><span class="line">    <span class="keyword">if</span>(lenend != lenb*lena)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,result[<span class="number">1024</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        result[i] = func();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(result[i] == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1004-成绩排名"><a href="#1004-成绩排名" class="headerlink" title="1004 成绩排名"></a>1004 成绩排名</h2><blockquote><p>读入 <em>n</em>（&gt;0）名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。</p><p>输入格式：</p><p>每个测试输入包含 1 个测试用例，格式为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第 1 行：正整数 n</span><br><span class="line">第 2 行：第 1 个学生的姓名 学号 成绩</span><br><span class="line">第 3 行：第 2 个学生的姓名 学号 成绩</span><br><span class="line">  ... ... ...</span><br><span class="line">第 n+1 行：第 n 个学生的姓名 学号 成绩</span><br></pre></td></tr></table></figure><p>其中<code>姓名</code>和<code>学号</code>均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。</p><p>输出格式：</p><p>对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。</p><p>输入样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">Joe Math990112 89</span><br><span class="line">Mike CS991301 100</span><br><span class="line">Mary EE990830 95</span><br></pre></td></tr></table></figure><p>输出样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mike CS991301</span><br><span class="line">Joe Math990112</span><br></pre></td></tr></table></figure></blockquote><p>这道题很简单啊，可是小菜鸡在写scanf()的时候忘记加&amp;了，然后就绕路写了一个分隔函数。。。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">string_process</span><span class="params">(<span class="keyword">char</span> * input, struct student stu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *stu_name,*stu_num,*stu_grade;</span><br><span class="line">    <span class="keyword">int</span> grade_int;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;input:%s\n&quot;</span>,input);</span><br><span class="line">    stu_name = input;</span><br><span class="line">    stu_num = input;</span><br><span class="line">    <span class="keyword">while</span>(*stu_num != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">        stu_num++;</span><br><span class="line">    &#125;</span><br><span class="line">    *stu_num = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;name:%s\n&quot;</span>,stu_name);</span><br><span class="line">    stu_num++;</span><br><span class="line">    stu_grade = stu_num;</span><br><span class="line">    <span class="keyword">while</span>(*stu_grade != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">        stu_grade++;</span><br><span class="line">    &#125;</span><br><span class="line">    *stu_grade = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num:%s\n&quot;</span>,stu_num);</span><br><span class="line">    stu_grade++;</span><br><span class="line">    <span class="built_in">strcpy</span>(stu.name,stu_name);</span><br><span class="line">    <span class="built_in">strcpy</span>(stu.number,stu_num);</span><br><span class="line">    grade_int = (<span class="keyword">int</span>)(*stu_grade - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + (<span class="keyword">int</span>)(*(stu_grade+<span class="number">1</span>)-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    stu.grade = grade_int;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;grade:%d\n&quot;</span>,grade_int);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的’ ‘可以用sep取代，必可活用于下一次……</p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> number[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> grade;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,max=<span class="number">0</span>,min=<span class="number">100</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">students</span>[1024],<span class="title">top_student</span>,<span class="title">bottom_student</span>;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d\n&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">char</span> input[<span class="number">1024</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d&quot;</span>,students[i].name,students[i].number,&amp;(students[i].grade));</span><br><span class="line">        <span class="keyword">if</span>(students[i].grade &gt; max)&#123;</span><br><span class="line">            max = students[i].grade;</span><br><span class="line">            top_student = students[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(students[i].grade &lt; min)&#123;</span><br><span class="line">            min = students[i].grade;</span><br><span class="line">            bottom_student = students[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,top_student.name,top_student.number);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,bottom_student.name,bottom_student.number);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1005-继续-3n-1-猜想"><a href="#1005-继续-3n-1-猜想" class="headerlink" title="1005 继续(3n+1)猜想"></a>1005 继续(3n+1)猜想</h2><blockquote><p>卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。</p><p>当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 <em>n</em>=3 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 <em>n</em>=5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3“覆盖”的数。我们称一个数列中的某个数 <em>n</em> 为“关键数”，如果 <em>n</em> 不能被数列中的其他数字所覆盖。</p><p>现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。</p><p>输入格式：</p><p>每个测试输入包含 1 个测试用例，第 1 行给出一个正整数 <em>K</em> (&lt;100)，第 2 行给出 <em>K</em> 个互不相同的待验证的正整数 <em>n</em> (1&lt;<em>n</em>≤100)的值，数字间用空格隔开。</p><p>输出格式：</p><p>每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用 1 个空格隔开，但一行中最后一个数字后没有空格。</p><p>输入样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">3 5 6 7 8 11</span><br></pre></td></tr></table></figure><p>输出样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 6</span><br></pre></td></tr></table></figure></blockquote><p>这道题小菜鸡dubug了好久（吐血），然而还是有一个测试没有通过，先po一下代码在这里。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">callatz</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> *becovered,<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(len == <span class="number">0</span>)&#123;</span><br><span class="line">            becovered[<span class="number">0</span>] = n;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            n = n/<span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            n = (<span class="number">3</span>*n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf(&quot;n=%d\n&quot;,n);</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="comment">//printf(&quot;becovered[%d]=%d\n&quot;,i,becovered[i]);</span></span><br><span class="line">            <span class="keyword">if</span>(n == becovered[i])&#123;</span><br><span class="line">                <span class="keyword">return</span> len;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i == len)&#123;</span><br><span class="line">            becovered[len] = n;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,arr[<span class="number">1024</span>],becovered[<span class="number">1024</span>],output[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> i,j,k,tmp;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        len = callatz(arr[i],becovered,len);</span><br><span class="line">    &#125;</span><br><span class="line">    k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;len;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] == becovered[j])</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == len)&#123;</span><br><span class="line">            output[k] = arr[i];</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;k;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(output[i] &lt; output[j])&#123;</span><br><span class="line">                tmp = output[i];</span><br><span class="line">                output[i] = output[j];</span><br><span class="line">                output[j] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i != k<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,output[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,output[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文档</title>
      <link href="/2020/09/01/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/"/>
      <url>/2020/09/01/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>这是一个测试文档</p><h2 id="1-关于我想要测试什么"><a href="#1-关于我想要测试什么" class="headerlink" title="1. 关于我想要测试什么"></a>1. 关于我想要测试什么</h2><p>我也不知道</p><h2 id="2-关于这个预期的测试效果"><a href="#2-关于这个预期的测试效果" class="headerlink" title="2. 关于这个预期的测试效果"></a>2. 关于这个预期的测试效果</h2><p>我觉得 看吧</p><h3 id="真的吗"><a href="#真的吗" class="headerlink" title="真的吗"></a>真的吗</h3><p>是的</p><h1 id="测试2"><a href="#测试2" class="headerlink" title="测试2"></a>测试2</h1><p>我想测试一下图片<br><img src="/images/21.png"></p><h1 id="测试3"><a href="#测试3" class="headerlink" title="测试3"></a>测试3</h1><h2 id="到这差不多了吧"><a href="#到这差不多了吧" class="headerlink" title="到这差不多了吧"></a>到这差不多了吧</h2><p>是的，再见！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一天学sqlite</title>
      <link href="/2020/09/01/%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6sqlite/"/>
      <url>/2020/09/01/%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%AD%A6sqlite/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="SQLite-是什么？"><a href="#SQLite-是什么？" class="headerlink" title="SQLite 是什么？"></a>SQLite 是什么？</h2><p>SQLite是一个轻量级的软件库，实现了自给自足、无服务器、零配置、事务性的SQL数据库引擎。</p><h2 id="Linux如何安装SQLite-？"><a href="#Linux如何安装SQLite-？" class="headerlink" title="Linux如何安装SQLite ？"></a>Linux如何安装SQLite ？</h2><p>发行版：Ubuntu 19.10</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install sqlite</span><br></pre></td></tr></table></figure><p>安装成功后，运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nevar@ubuntu:~$ sqlite3</span><br><span class="line">SQLite version 3.29.0 2019-07-10 17:32:03</span><br><span class="line">Enter &quot;.help&quot; for usage hints.</span><br><span class="line">Connected to a transient in-memory database.</span><br><span class="line">Use &quot;.open FILENAME&quot; to reopen on a persistent database.</span><br><span class="line"><span class="meta">sqlite&gt;</span><span class="bash"> </span></span><br></pre></td></tr></table></figure><p>显示安装版本为3.29.0。</p><h2 id="如何使用SQLite-？"><a href="#如何使用SQLite-？" class="headerlink" title="如何使用SQLite ？"></a>如何使用SQLite ？</h2><h3 id="大小写敏感性"><a href="#大小写敏感性" class="headerlink" title="大小写敏感性"></a>大小写敏感性</h3><p>有个重要的点值得注意，SQLite 是<strong>不区分大小写</strong>的，但也有一些命令是大小写敏感的，比如 <strong>GLOB</strong> 和 <strong>glob</strong> 在 SQLite 的语句中有不同的含义。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>SQLite中可以使用“–”或者“/**/”来进行注释，可以跨越多行，但不可以嵌套。</p><h3 id="SQLite存储类"><a href="#SQLite存储类" class="headerlink" title="SQLite存储类"></a>SQLite存储类</h3><table><thead><tr><th>存储类</th><th>描述</th></tr></thead><tbody><tr><td>NULL</td><td>值是一个 NULL 值。</td></tr><tr><td>INTERGER</td><td>值是一个带符号的整数，根据值的大小存储在 1、2、3、4、6 或 8 字节中。</td></tr><tr><td>REAL</td><td>值是一个浮点值，存储为 8 字节的 IEEE 浮点数字。</td></tr><tr><td>TEXT</td><td>值是一个文本字符串，使用数据库编码（UTF-8、UTF-16BE 或 UTF-16LE）存储。</td></tr><tr><td>BLOB</td><td>值是一个 blob 数据，完全根据它的输入存储。</td></tr></tbody></table><p>SQLite 没有单独的 Boolean 存储类。相反，布尔值被存储为整数 0（false）和 1（true）。</p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sqlite3 DatabaseName.db</span></span><br></pre></td></tr></table></figure><p>上面的命令将在当前目录下创建一个文件 <strong>DatabaseName.db</strong>。该文件将被 SQLite 引擎用作数据库。</p><p>一旦数据库被创建，您就可以使用 SQLite 的 <strong>.databases</strong> 命令来检查它是否在数据库列表中，如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt;.databases</span><br><span class="line">seq  name             file</span><br><span class="line"><span class="comment">---  ---------------  ----------------------</span></span><br><span class="line">0    main             /home/sqlite/testDB.db</span><br></pre></td></tr></table></figure><p>您可以使用 SQLite <strong>.quit</strong> 命令退出 sqlite 提示符，如下所示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt;.quit</span><br></pre></td></tr></table></figure><p>您可以在命令提示符中使用 SQLite <strong>.dump</strong> 点命令来导出完整的数据库在一个文本文件中，如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sqlite3 testDB.db .dump &gt; testDB.sql</span></span><br></pre></td></tr></table></figure><p>上面的命令将转换整个 <strong>testDB.db</strong> 数据库的内容到 SQLite 的语句中，并将其转储到 ASCII 文本文件 <strong>testDB.sql</strong> 中。您可以通过简单的方式从生成的 testDB.sql 恢复，如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sqlite3 testDB.db &lt; testDB.sql</span></span><br></pre></td></tr></table></figure><p>此时的数据库是空的，一旦数据库中有表和数据，您可以尝试上述两个程序。</p><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p>基本语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name(</span><br><span class="line">colomn1 datatype PRIMARY <span class="keyword">KEY</span></span><br><span class="line">    colomn2 datatype,</span><br><span class="line">    colomn3 datatype,</span><br><span class="line">    ......</span><br><span class="line">    colomnN datatype</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt; CREATE TABLE COMPANY(</span><br><span class="line">   ID INT PRIMARY KEY     NOT NULL,</span><br><span class="line">   NAME           TEXT    NOT NULL,</span><br><span class="line">   AGE            INT     NOT NULL,</span><br><span class="line">   ADDRESS        CHAR(50),</span><br><span class="line">   SALARY         REAL</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>可以使用 SQLIte 命令中的 <strong>.tables</strong> 命令来验证表是否已成功创建，该命令用于列出附加数据库中的所有表。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt;.tables</span><br></pre></td></tr></table></figure><p>您可以使用 SQLite <strong>.schema</strong> 命令得到表的完整信息，如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt;.schema COMPANY</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> COMPANY(</span><br><span class="line">   <span class="keyword">ID</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>     <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   <span class="keyword">NAME</span>           <span class="built_in">TEXT</span>    <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   AGE            <span class="built_in">INT</span>     <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   ADDRESS        <span class="built_in">CHAR</span>(<span class="number">50</span>),</span><br><span class="line">   SALARY         <span class="built_in">REAL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h3><p>DROP TABLE 语句的基本语法如下。您可以选择指定带有表名的数据库名称，如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> database_name.table_name;</span><br></pre></td></tr></table></figure><p>实例：</p><p>让我们先确认 COMPANY 表已经存在，然后我们将其从数据库中删除。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt;.tables</span><br><span class="line">COMPANY       test.COMPANY</span><br></pre></td></tr></table></figure><p>这意味着 COMPANY 表已存在数据库中，接下来让我们把它从数据库中删除，如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt;DROP TABLE COMPANY;</span><br><span class="line">sqlite&gt;</span><br></pre></td></tr></table></figure><p>现在，如果尝试 .TABLES 命令，那么将无法找到 COMPANY 表了：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt;.tables</span><br><span class="line">sqlite&gt;</span><br></pre></td></tr></table></figure><p>显示结果为空，意味着已经成功从数据库删除表。</p><h3 id="Insert-插入数据"><a href="#Insert-插入数据" class="headerlink" title="Insert 插入数据"></a>Insert 插入数据</h3><p>INSERT INTO 语句有两种基本语法，如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TABLE_NAME [(column1, column2, column3,...columnN)]  </span><br><span class="line"><span class="keyword">VALUES</span> (value1, value2, value3,...valueN);</span><br></pre></td></tr></table></figure><p>在这里，column1, column2,…columnN 是要插入数据的表中的列的名称。</p><p>如果要为表中的所有列添加值，您也可以不需要在 SQLite 查询中指定列名称。但要确保值的顺序与列在表中的顺序一致。SQLite 的 INSERT INTO 语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TABLE_NAME <span class="keyword">VALUES</span> (value1,value2,value3,...valueN);</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其他语句与mysql差不多。</p><h2 id="如何在C程序中使用SQLite-？"><a href="#如何在C程序中使用SQLite-？" class="headerlink" title="如何在C程序中使用SQLite ？"></a>如何在C程序中使用SQLite ？</h2><h2 id="C-C-接口-API"><a href="#C-C-接口-API" class="headerlink" title="C/C++ 接口 API"></a>C/C++ 接口 API</h2><p>需要先下载sqlite3库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libsqlite3-dev</span><br></pre></td></tr></table></figure><p>编译时加上库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o test test.c -lsqlite3</span><br></pre></td></tr></table></figure><p>以下是重要的 C&amp;C++ / SQLite 接口程序，可以满足您在 C/C++ 程序中使用 SQLite 数据库的需求。如果您需要了解更多细节，请查看 SQLite 官方文档。</p><table><thead><tr><th align="left">序号</th><th align="left">API &amp; 描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>sqlite3_open(const char *filename, sqlite3 \</strong>ppDb)** 该例程打开一个指向 SQLite 数据库文件的连接，返回一个用于其他 SQLite 程序的数据库连接对象。如果 <em>filename</em> 参数是 NULL 或 ‘:memory:’，那么 sqlite3_open() 将会在 RAM 中创建一个内存数据库，这只会在 session 的有效时间内持续。如果文件名 filename 不为 NULL，那么 sqlite3_open() 将使用这个参数值尝试打开数据库文件。如果该名称的文件不存在，sqlite3_open() 将创建一个新的命名为该名称的数据库文件并打开。</td></tr><tr><td align="left">2</td><td align="left"><strong>sqlite3_exec(sqlite3*, const char *sql, sqlite_callback, void *data, char \</strong>errmsg)** 该例程提供了一个执行 SQL 命令的快捷方式，SQL 命令由 sql 参数提供，可以由多个 SQL 命令组成。在这里，第一个参数 <em>sqlite3</em> 是打开的数据库对象，<em>sqlite_callback</em> 是一个回调，<em>data</em> 作为其第一个参数，errmsg 将被返回用来获取程序生成的任何错误。sqlite3_exec() 程序解析并执行由 <strong>sql</strong> 参数所给的每个命令，直到字符串结束或者遇到错误为止。</td></tr><tr><td align="left">3</td><td align="left"><strong>sqlite3_close(sqlite3*)</strong> 该例程关闭之前调用 sqlite3_open() 打开的数据库连接。所有与连接相关的语句都应在连接关闭之前完成。如果还有查询没有完成，sqlite3_close() 将返回 SQLITE_BUSY 禁止关闭的错误消息。</td></tr></tbody></table><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>下面的 C 代码段显示了如何连接到一个现有的数据库。如果数据库不存在，那么它就会被创建，最后将返回一个数据库对象。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sqlite3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="keyword">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在，让我们来编译和运行上面的程序，在当前目录中创建我们的数据库 <strong>test.db</strong>。您可以根据需要改变路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">gcc test.c -l sqlite3</span></span><br><span class="line"><span class="meta">$</span><span class="bash">./a.out</span></span><br><span class="line">Opened database successfully</span><br></pre></td></tr></table></figure><p>在这里，把我们的程序链接上 sqlite3 库，以便向 C 程序提供必要的函数。这将在您的目录下创建一个数据库文件 test.db，您将得到如下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-rwxr-xr-x. 1 root root 7383 May  8 02:06 a.out</span><br><span class="line">-rw-r--r--. 1 root root  323 May  8 02:05 test.c</span><br><span class="line">-rw-r--r--. 1 root root    0 May  8 02:06 test.db</span><br></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><p>下面的 C 代码段将用于在先前创建的数据库中创建一个表：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sqlite3.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">callback</span><span class="params">(<span class="keyword">void</span> *NotUsed, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **azColName)</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="keyword">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span>  rc;</span><br><span class="line">   <span class="keyword">char</span> *sql;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;CREATE TABLE COMPANY(&quot;</span>  \</span><br><span class="line">         <span class="string">&quot;ID INT PRIMARY KEY     NOT NULL,&quot;</span> \</span><br><span class="line">         <span class="string">&quot;NAME           TEXT    NOT NULL,&quot;</span> \</span><br><span class="line">         <span class="string">&quot;AGE            INT     NOT NULL,&quot;</span> \</span><br><span class="line">         <span class="string">&quot;ADDRESS        CHAR(50),&quot;</span> \</span><br><span class="line">         <span class="string">&quot;SALARY         REAL );&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, <span class="number">0</span>, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Table created successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序编译和执行时，它会在 test.db cc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-rwxr-xr-x. 1 root root 9567 May  8 02:31 a.out</span><br><span class="line">-rw-r--r--. 1 root root 1207 May  8 02:31 test.c</span><br><span class="line">-rw-r--r--. 1 root root 3072 May  8 02:31 test.db</span><br></pre></td></tr></table></figure><h3 id="INSERT操作"><a href="#INSERT操作" class="headerlink" title="INSERT操作"></a>INSERT操作</h3><p>下面的 C 代码段显示了如何在上面创建的 COMPANY 表中创建记录：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sqlite3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">callback</span><span class="params">(<span class="keyword">void</span> *NotUsed, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **azColName)</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="keyword">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> rc;</span><br><span class="line">   <span class="keyword">char</span> *sql;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) &quot;</span>  \</span><br><span class="line">         <span class="string">&quot;VALUES (1, &#x27;Paul&#x27;, 32, &#x27;California&#x27;, 20000.00 ); &quot;</span> \</span><br><span class="line">         <span class="string">&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) &quot;</span>  \</span><br><span class="line">         <span class="string">&quot;VALUES (2, &#x27;Allen&#x27;, 25, &#x27;Texas&#x27;, 15000.00 ); &quot;</span>     \</span><br><span class="line">         <span class="string">&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY)&quot;</span> \</span><br><span class="line">         <span class="string">&quot;VALUES (3, &#x27;Teddy&#x27;, 23, &#x27;Norway&#x27;, 20000.00 );&quot;</span> \</span><br><span class="line">         <span class="string">&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY)&quot;</span> \</span><br><span class="line">         <span class="string">&quot;VALUES (4, &#x27;Mark&#x27;, 25, &#x27;Rich-Mond &#x27;, 65000.00 );&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, <span class="number">0</span>, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Records created successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序编译和执行时，它会在 COMPANY 表中创建给定记录，并会显示以下两行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Opened database successfully</span><br><span class="line">Records created successfully</span><br></pre></td></tr></table></figure><h3 id="SELECT-操作"><a href="#SELECT-操作" class="headerlink" title="SELECT 操作"></a>SELECT 操作</h3><p>在我们开始讲解获取记录的实例之前，让我们先了解下回调函数的一些细节，这将在我们的实例使用到。这个回调提供了一个从 SELECT 语句获得结果的方式。它声明如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span> <span class="params">(*sqlite3_callback)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">void</span>*,    <span class="comment">/* Data provided in the 4th argument of sqlite3_exec() */</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span>,      <span class="comment">/* The number of columns in row */</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">char</span>**,   <span class="comment">/* An array of strings representing fields in the row */</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">char</span>**    <span class="comment">/* An array of strings representing column names */</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>如果上面的回调在 sqlite_exec() 程序中作为第三个参数，那么 SQLite 将为 SQL 参数内执行的每个 SELECT 语句中处理的每个记录调用这个回调函数。</p><p>下面的 C 代码段显示了如何从前面创建的 COMPANY 表中获取并显示记录：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sqlite3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">callback</span><span class="params">(<span class="keyword">void</span> *data, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **azColName)</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;%s: &quot;</span>, (<span class="keyword">const</span> <span class="keyword">char</span>*)data);</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="keyword">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> rc;</span><br><span class="line">   <span class="keyword">char</span> *sql;</span><br><span class="line">   <span class="keyword">const</span> <span class="keyword">char</span>* data = <span class="string">&quot;Callback function called&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;SELECT * from COMPANY&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, (<span class="keyword">void</span>*)data, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Operation done successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序编译和执行时，它会产生以下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Opened database successfully</span><br><span class="line">Callback function called: ID &#x3D; 1</span><br><span class="line">NAME &#x3D; Paul</span><br><span class="line">AGE &#x3D; 32</span><br><span class="line">ADDRESS &#x3D; California</span><br><span class="line">SALARY &#x3D; 20000.0</span><br><span class="line"></span><br><span class="line">Callback function called: ID &#x3D; 2</span><br><span class="line">NAME &#x3D; Allen</span><br><span class="line">AGE &#x3D; 25</span><br><span class="line">ADDRESS &#x3D; Texas</span><br><span class="line">SALARY &#x3D; 15000.0</span><br><span class="line"></span><br><span class="line">Callback function called: ID &#x3D; 3</span><br><span class="line">NAME &#x3D; Teddy</span><br><span class="line">AGE &#x3D; 23</span><br><span class="line">ADDRESS &#x3D; Norway</span><br><span class="line">SALARY &#x3D; 20000.0</span><br><span class="line"></span><br><span class="line">Callback function called: ID &#x3D; 4</span><br><span class="line">NAME &#x3D; Mark</span><br><span class="line">AGE &#x3D; 25</span><br><span class="line">ADDRESS &#x3D; Rich-Mond</span><br><span class="line">SALARY &#x3D; 65000.0</span><br><span class="line"></span><br><span class="line">Operation done successfully</span><br></pre></td></tr></table></figure><h3 id="UPDATE-操作"><a href="#UPDATE-操作" class="headerlink" title="UPDATE 操作"></a>UPDATE 操作</h3><p>下面的 C 代码段显示了如何使用 UPDATE 语句来更新任何记录，然后从 COMPANY 表中获取并显示更新的记录：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sqlite3.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">callback</span><span class="params">(<span class="keyword">void</span> *data, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **azColName)</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;%s: &quot;</span>, (<span class="keyword">const</span> <span class="keyword">char</span>*)data);</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="keyword">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> rc;</span><br><span class="line">   <span class="keyword">char</span> *sql;</span><br><span class="line">   <span class="keyword">const</span> <span class="keyword">char</span>* data = <span class="string">&quot;Callback function called&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create merged SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;UPDATE COMPANY set SALARY = 25000.00 where ID=1; &quot;</span> \</span><br><span class="line">         <span class="string">&quot;SELECT * from COMPANY&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, (<span class="keyword">void</span>*)data, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Operation done successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序编译和执行时，它会产生以下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Opened database successfully</span><br><span class="line">Callback function called: ID = 1</span><br><span class="line">NAME = Paul</span><br><span class="line">AGE = 32</span><br><span class="line">ADDRESS = California</span><br><span class="line">SALARY = 25000.0</span><br><span class="line"></span><br><span class="line">Callback function called: ID = 2</span><br><span class="line">NAME = Allen</span><br><span class="line">AGE = 25</span><br><span class="line">ADDRESS = Texas</span><br><span class="line">SALARY = 15000.0</span><br><span class="line"></span><br><span class="line">Callback function called: ID = 3</span><br><span class="line">NAME = Teddy</span><br><span class="line">AGE = 23</span><br><span class="line">ADDRESS = Norway</span><br><span class="line">SALARY = 20000.0</span><br><span class="line"></span><br><span class="line">Callback function called: ID = 4</span><br><span class="line">NAME = Mark</span><br><span class="line">AGE = 25</span><br><span class="line">ADDRESS = Rich-Mond</span><br><span class="line">SALARY = 65000.0</span><br><span class="line"></span><br><span class="line">Operation done successfully</span><br></pre></td></tr></table></figure><h3 id="DELETE-操作"><a href="#DELETE-操作" class="headerlink" title="DELETE 操作"></a>DELETE 操作</h3><p>下面的 C 代码段显示了如何使用 DELETE 语句删除任何记录，然后从 COMPANY 表中获取并显示剩余的记录：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sqlite3.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">callback</span><span class="params">(<span class="keyword">void</span> *data, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **azColName)</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;%s: &quot;</span>, (<span class="keyword">const</span> <span class="keyword">char</span>*)data);</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="keyword">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> rc;</span><br><span class="line">   <span class="keyword">char</span> *sql;</span><br><span class="line">   <span class="keyword">const</span> <span class="keyword">char</span>* data = <span class="string">&quot;Callback function called&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create merged SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;DELETE from COMPANY where ID=2; &quot;</span> \</span><br><span class="line">         <span class="string">&quot;SELECT * from COMPANY&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, (<span class="keyword">void</span>*)data, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Operation done successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序编译和执行时，它会产生以下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Opened database successfully</span><br><span class="line">Callback function called: ID = 1</span><br><span class="line">NAME = Paul</span><br><span class="line">AGE = 32</span><br><span class="line">ADDRESS = California</span><br><span class="line">SALARY = 20000.0</span><br><span class="line"></span><br><span class="line">Callback function called: ID = 3</span><br><span class="line">NAME = Teddy</span><br><span class="line">AGE = 23</span><br><span class="line">ADDRESS = Norway</span><br><span class="line">SALARY = 20000.0</span><br><span class="line"></span><br><span class="line">Callback function called: ID = 4</span><br><span class="line">NAME = Mark</span><br><span class="line">AGE = 25</span><br><span class="line">ADDRESS = Rich-Mond</span><br><span class="line">SALARY = 65000.0</span><br><span class="line"></span><br><span class="line">Operation done successfully</span><br></pre></td></tr></table></figure><h2 id="sqlcipher的使用"><a href="#sqlcipher的使用" class="headerlink" title="sqlcipher的使用"></a>sqlcipher的使用</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get sqlcipher</span><br></pre></td></tr></table></figure><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlcipher test.db</span><br><span class="line">sqlite&gt; ATTACH DATABASE &#39;encrypted_test.db&#39; AS test KEY &#39;testkey&#39;;</span><br><span class="line">sqlite&gt; SELECT sqlcipher_export(&#39;test&#39;);</span><br><span class="line">sqlite&gt; DETACH DATABASE test;</span><br><span class="line">sqlite&gt; &#x2F;exit</span><br></pre></td></tr></table></figure><h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlcipher encrypted_test.db</span><br><span class="line">sqlite&gt; PRAGMA key &#x3D; &#39;testkey&#39;;--验证密钥</span><br><span class="line">sqlite&gt; SELECT * FROM test_table;--if this throws an error, the key was incorrect. If it succeeds and returns a numeric value, the key is correct;</span><br></pre></td></tr></table></figure><p>C代码实现密钥检查：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlite3_key(,<span class="string">&quot;testkey&quot;</span>,<span class="number">7</span>);</span><br><span class="line"><span class="keyword">if</span>(sqlite3_exec(,))</span><br></pre></td></tr></table></figure><h2 id="sqlite3-stmt的使用"><a href="#sqlite3-stmt的使用" class="headerlink" title="sqlite3 stmt的使用"></a>sqlite3 stmt的使用</h2><p>我们在进行循环操作时，与sqlit3_stmt配套的功能函数如下：</p><p>（1）创建sqlite3_stmt对象，使用 sqlite3_prepare_v2();</p><p>（2）绑定参数值到sqlite3_stmt独享，使用sqlite3_bind_*();</p><p>（3）运行sql语句，使用sqlite3_step()，可以是一次，也可以是循环执行。</p><p>（4）重置（reset）sqlite3_stmt对象，使用sqlite3_reset(), 然后回退到步骤2，重新赋值。</p><p>（5）销毁sqlite3_stmt对象，使用sqlite3_finalize()函数，一般是循环操作完成后，销毁。</p>]]></content>
      
      
      
        <tags>
            
            <tag> sqlite </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
